{
  "version": 3,
  "sources": ["../../audiobuffer-to-wav/index.js"],
  "sourcesContent": ["module.exports = audioBufferToWav\nfunction audioBufferToWav (buffer, opt) {\n  opt = opt || {}\n\n  var numChannels = buffer.numberOfChannels\n  var sampleRate = buffer.sampleRate\n  var format = opt.float32 ? 3 : 1\n  var bitDepth = format === 3 ? 32 : 16\n\n  var result\n  if (numChannels === 2) {\n    result = interleave(buffer.getChannelData(0), buffer.getChannelData(1))\n  } else {\n    result = buffer.getChannelData(0)\n  }\n\n  return encodeWAV(result, format, sampleRate, numChannels, bitDepth)\n}\n\nfunction encodeWAV (samples, format, sampleRate, numChannels, bitDepth) {\n  var bytesPerSample = bitDepth / 8\n  var blockAlign = numChannels * bytesPerSample\n\n  var buffer = new ArrayBuffer(44 + samples.length * bytesPerSample)\n  var view = new DataView(buffer)\n\n  /* RIFF identifier */\n  writeString(view, 0, 'RIFF')\n  /* RIFF chunk length */\n  view.setUint32(4, 36 + samples.length * bytesPerSample, true)\n  /* RIFF type */\n  writeString(view, 8, 'WAVE')\n  /* format chunk identifier */\n  writeString(view, 12, 'fmt ')\n  /* format chunk length */\n  view.setUint32(16, 16, true)\n  /* sample format (raw) */\n  view.setUint16(20, format, true)\n  /* channel count */\n  view.setUint16(22, numChannels, true)\n  /* sample rate */\n  view.setUint32(24, sampleRate, true)\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * blockAlign, true)\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, blockAlign, true)\n  /* bits per sample */\n  view.setUint16(34, bitDepth, true)\n  /* data chunk identifier */\n  writeString(view, 36, 'data')\n  /* data chunk length */\n  view.setUint32(40, samples.length * bytesPerSample, true)\n  if (format === 1) { // Raw PCM\n    floatTo16BitPCM(view, 44, samples)\n  } else {\n    writeFloat32(view, 44, samples)\n  }\n\n  return buffer\n}\n\nfunction interleave (inputL, inputR) {\n  var length = inputL.length + inputR.length\n  var result = new Float32Array(length)\n\n  var index = 0\n  var inputIndex = 0\n\n  while (index < length) {\n    result[index++] = inputL[inputIndex]\n    result[index++] = inputR[inputIndex]\n    inputIndex++\n  }\n  return result\n}\n\nfunction writeFloat32 (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 4) {\n    output.setFloat32(offset, input[i], true)\n  }\n}\n\nfunction floatTo16BitPCM (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 2) {\n    var s = Math.max(-1, Math.min(1, input[i]))\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true)\n  }\n}\n\nfunction writeString (view, offset, string) {\n  for (var i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i))\n  }\n}\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,WAAO,UAAU;AACjB,aAAS,iBAAkB,QAAQ,KAAK;AACtC,YAAM,OAAO,CAAC;AAEd,UAAI,cAAc,OAAO;AACzB,UAAI,aAAa,OAAO;AACxB,UAAI,SAAS,IAAI,UAAU,IAAI;AAC/B,UAAI,WAAW,WAAW,IAAI,KAAK;AAEnC,UAAI;AACJ,UAAI,gBAAgB,GAAG;AACrB,iBAAS,WAAW,OAAO,eAAe,CAAC,GAAG,OAAO,eAAe,CAAC,CAAC;AAAA,MACxE,OAAO;AACL,iBAAS,OAAO,eAAe,CAAC;AAAA,MAClC;AAEA,aAAO,UAAU,QAAQ,QAAQ,YAAY,aAAa,QAAQ;AAAA,IACpE;AAEA,aAAS,UAAW,SAAS,QAAQ,YAAY,aAAa,UAAU;AACtE,UAAI,iBAAiB,WAAW;AAChC,UAAI,aAAa,cAAc;AAE/B,UAAI,SAAS,IAAI,YAAY,KAAK,QAAQ,SAAS,cAAc;AACjE,UAAI,OAAO,IAAI,SAAS,MAAM;AAG9B,kBAAY,MAAM,GAAG,MAAM;AAE3B,WAAK,UAAU,GAAG,KAAK,QAAQ,SAAS,gBAAgB,IAAI;AAE5D,kBAAY,MAAM,GAAG,MAAM;AAE3B,kBAAY,MAAM,IAAI,MAAM;AAE5B,WAAK,UAAU,IAAI,IAAI,IAAI;AAE3B,WAAK,UAAU,IAAI,QAAQ,IAAI;AAE/B,WAAK,UAAU,IAAI,aAAa,IAAI;AAEpC,WAAK,UAAU,IAAI,YAAY,IAAI;AAEnC,WAAK,UAAU,IAAI,aAAa,YAAY,IAAI;AAEhD,WAAK,UAAU,IAAI,YAAY,IAAI;AAEnC,WAAK,UAAU,IAAI,UAAU,IAAI;AAEjC,kBAAY,MAAM,IAAI,MAAM;AAE5B,WAAK,UAAU,IAAI,QAAQ,SAAS,gBAAgB,IAAI;AACxD,UAAI,WAAW,GAAG;AAChB,wBAAgB,MAAM,IAAI,OAAO;AAAA,MACnC,OAAO;AACL,qBAAa,MAAM,IAAI,OAAO;AAAA,MAChC;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,WAAY,QAAQ,QAAQ;AACnC,UAAI,SAAS,OAAO,SAAS,OAAO;AACpC,UAAI,SAAS,IAAI,aAAa,MAAM;AAEpC,UAAI,QAAQ;AACZ,UAAI,aAAa;AAEjB,aAAO,QAAQ,QAAQ;AACrB,eAAO,OAAO,IAAI,OAAO,UAAU;AACnC,eAAO,OAAO,IAAI,OAAO,UAAU;AACnC;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,aAAS,aAAc,QAAQ,QAAQ,OAAO;AAC5C,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,UAAU,GAAG;AAClD,eAAO,WAAW,QAAQ,MAAM,CAAC,GAAG,IAAI;AAAA,MAC1C;AAAA,IACF;AAEA,aAAS,gBAAiB,QAAQ,QAAQ,OAAO;AAC/C,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,UAAU,GAAG;AAClD,YAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC;AAC1C,eAAO,SAAS,QAAQ,IAAI,IAAI,IAAI,QAAS,IAAI,OAAQ,IAAI;AAAA,MAC/D;AAAA,IACF;AAEA,aAAS,YAAa,MAAM,QAAQ,QAAQ;AAC1C,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,aAAK,SAAS,SAAS,GAAG,OAAO,WAAW,CAAC,CAAC;AAAA,MAChD;AAAA,IACF;AAAA;AAAA;",
  "names": []
}
